#!/bin/sh
# Change the current wallpaper.

# Directory where wallpapers are stored. The file stored in this directory
# which matches $wallpaper_directory/wallpaper.* is the currently set wallpaper
# if it was set with -i argument.
wallpaper_directory=$HOME/.config/wallpaper

use_wal=false

setwall() {
	# Set wallpaper with feh, if it exists.
	command -v feh >/dev/null 2>&1 &&
		feh --bg-fill "$1"
	# Generate scheme from wallpaper with wal and pywalfox, if they exist.
	[ "$use_wal" = true ] && command -v wal >/dev/null 2>&1 &&
		wal -c &&
		wal -qsni "$1" --saturate 0.5 --backend haishoku &&
		command -v pywalfox >/dev/null 2>&1 &&
		pywalfox update
}

list() {
	# List available wallpapers.
	for f in "$wallpaper_directory"/*; do
		file="${f##*/}"
		case $file in
		wallpaper.*) ;;
		*) echo "$file" ;;
		esac
	done
}

change() {
	# Remove old wallpaper and replace it with new wallpaper.
	# old_wallpaper=("$wallpaper_directory"/wallpaper.*)
	rm -f "$wallpaper_directory"/wallpaper.*
	new_wallpaper=$1
	cp "$wallpaper_directory"/"$new_wallpaper" \
		"$wallpaper_directory"/wallpaper."${new_wallpaper##*.}"
}

usage() {
	printf "%s" "\
USAGE:
    changewall [FLAGS] [IMAGE]

FLAGS:
    -i image     Sets wallpaper to image from directory
    -w           Enables wal to generate a color scheme
    -l           Lists all available wallpapers
    -h           Prints help information
"
}

while getopts "i:wlh" OPT; do
	case "$OPT" in
	i)
		change "$OPTARG" && setwall "$wallpaper_directory"/wallpaper.*
		;;
	w)
		use_wal=true
		;;
	l)
		list
		exit 0
		;;
	h)
		usage
		exit 0
		;;
	*)
		usage
		exit 1
		;;
	esac
done

[ "$#" = 0 ] && setwall "$wallpaper_directory"/wallpaper.*
