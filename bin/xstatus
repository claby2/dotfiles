#!/bin/sh
# Script to continuously set WM_NAME X11 property for dwm status bar.
# This script uses status2d dwm patch and xrdb colors for color output.

# Separator displayed between two modules.
separator=" "

volume() {
	lvolume=$(amixer get Master | grep 'Left:' | awk -F'[][]' '{ print $2 }')
	rvolume=$(amixer get Master | grep 'Right:' | awk -F'[][]' '{ print $2 }')
	# Display both lvolume and rvolume if they differ.
	[ "$lvolume" != "$rvolume" ] && lvolume="$lvolume-$rvolume"
	printf "^C4^%s ï©½" "$lvolume"
}

disk() {
	printf "%s ðŸ–´" "$(df -h / | awk ' /[0-9]/ {print $3 "/" $2}')"
}

packages() {
	printf "^C4^%s ðŸ“¦" "$(pacman -Q | wc -l)"
}

datetime() {
	date +"%a %d %b %I:%M %p"
}

# Set the modules to display from left to right.
bar() {
	module volume
	module disk
	module packages
	module datetime
}

# Only echoes output if the command succeeds.
module() {
	# Append ^d^ to reset status2d colors.
	out=$($1 2>&1) && echo "$out^d^"
}

formatbar() {
	echo " $(bar | xargs -d "\n" printf "%s\n$separator\n" | head -n -1 | tr "\n" " ")"
}

usage() {
	printf "%s" "\
USAGE:
    xstatus [FLAGS]

FLAGS:
    -s    Prints bar content to stdout
    -r    Prints current root WM_NAME
    -h    Prints help information
"
}

while getopts "srh" OPT; do
	case "$OPT" in
	s)
		# Simply print to stdout.
		formatbar
		exit 0
		;;
	r)
		xprop -root WM_NAME | sed -e "s/.*\"\(.*\)\".*/\1/"
		exit 0
		;;
	h | *)
		usage
		exit 0
		;;
	esac
done

while :; do
	xsetroot -name "$(formatbar)" || exit 1
	sleep 3s
done
